{"version":3,"sources":["assets/images/paul.png","assets/images/why-potatoes.png","assets/images/insta1.png","assets/images/insta2.png","assets/images/insta3.png","assets/images/insta4.png","assets/images/insta5.png","assets/images/insta6.png","assets/images/insta7.png","assets/images/sustainabilty.png","Home.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","href","id","src","require","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac34d368.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/paul.46e35cbd.png\";","module.exports = __webpack_public_path__ + \"static/media/why-potatoes.485e5cbd.png\";","module.exports = __webpack_public_path__ + \"static/media/insta1.5d880234.png\";","module.exports = __webpack_public_path__ + \"static/media/insta2.474e36aa.png\";","module.exports = __webpack_public_path__ + \"static/media/insta3.ca00cb5c.png\";","module.exports = __webpack_public_path__ + \"static/media/insta4.7d0f6f08.png\";","module.exports = __webpack_public_path__ + \"static/media/insta5.6bb03592.png\";","module.exports = __webpack_public_path__ + \"static/media/insta6.29c2803f.png\";","module.exports = __webpack_public_path__ + \"static/media/insta7.af3a1666.png\";","module.exports = __webpack_public_path__ + \"static/media/sustainabilty.d5872e28.png\";","import React from 'react';\nimport './assets/css/Home.scss';\n\nfunction Home() {\n  return (\n    <div className=\"shell\">\n\n      <div className=\"nav\">\n        <a href=\"#home\" className=\"home icon\">home</a>\n        {/* <p className=\"nav-title\">Twice baked and loaded</p> */}\n        <a href=\"tel:07766197840\" className=\"right phone icon\">phone</a>\n        <a href=\"mailto:paul@twicebakedandloaded.com\" className=\"right mail icon\">mail</a>\n      </div>\n      <div className=\"header\" id=\"home\">\n        <div className=\"banner1\">\n          <span>Welcome to</span>\n        </div>\n        <div className=\"header-img\">\n          <div className=\"banner2\">\n            <div>Twice Baked</div>\n            <div className=\"line2\">and Loaded</div>\n          </div>\n          <div className=\"banner3\">\n            <span>Potato Company</span>\n          </div>\n          {/* <div className=\"arrow-cont\">\n            <a className=\"arrow-up\">\n              circle-up\n          </a>\n          </div> */}\n        </div>\n\n        <div className=\"description-slip\">\n          <div>\n            <h4><span>Twice Baked and Loaded Potato Company</span> are based in Holt, Wiltshire. They serve delicious potatoes at festivals, street markets and are available for private parties or weddings.</h4>\n          </div>\n        </div>\n\n        <div className=\"black-slice\">\n          <div className=\"black-slice-content\">\n            <div className=\"slice-text\">\n              <h3 className=\"slice-h3\">\n                One Potato, Two Potato, Three Potato... <span className=\"paul\">Paul</span>\n              </h3>\n              <p className=\"slice-p\">\n                Meet Paul McNeil, the man behind the stand. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiu ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n              </p>\n            </div>\n            <div>\n              <img className=\"slice-img\" src={require(\"./assets/images/paul.png\")} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"contact-slip\">\n          <div>\n            <h4><span>Contact Paul: </span>\n              <a href=\"tel:07766197840\" className=\"icon\">phone</a><a href=\"tel:07766197840\" className=\"link\">07766197840</a>\n              <a href=\"mailto:paul@twicebakedandloaded.com\" className=\"icon\">mail</a><a href=\"mailto:paul@twicebakedandloaded.com\" className=\"link\">paul@twicebakedandloaded.com</a> </h4>\n          </div>\n        </div>\n\n        <div className=\"brown-slice\">\n          <div className=\"brown-slice-content\">\n            <div className=\"slice-text\">\n              <h3 className=\"slice-h3\">\n                ...But Why <span className=\"paul\">Potatoes?</span>\n              </h3>\n              <p className=\"slice-p\">\n                Potatoes are delicious and nutrious. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiu ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n              </p>\n            </div>\n            <div> </div>\n            <div>\n              <img className=\"slice-img\" src={require(\"./assets/images/why-potatoes.png\")} />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"insta-slip\">\n          <div className=\"insta-slip-cont\">\n            <div className=\"img-cont\">\n              <img className=\"slide-img\" src={require(\"./assets/images/insta1.png\")} />\n              <img className=\"slide-img\" src={require(\"./assets/images/insta2.png\")} />\n              <img className=\"slide-img\" src={require(\"./assets/images/insta3.png\")} />\n              <img className=\"slide-img\" src={require(\"./assets/images/insta4.png\")} />\n              <img className=\"slide-img\" src={require(\"./assets/images/insta5.png\")} />\n              <img className=\"slide-img\" src={require(\"./assets/images/insta6.png\")} />\n              <img className=\"slide-img\" src={require(\"./assets/images/insta7.png\")} />\n            </div>\n          </div>\n          <div className=\"insta-link\">          \n          <span>#twicebakedandloaded</span>\n            <span className=\"link1-cont\"><a href=\"https://www.facebook.com/Twice-Baked-and-Loaded-Potato-Company-100501174636828/\" target=\"_blank\" className=\"icon\">facebook2</a><a href=\"https://www.facebook.com/Twice-Baked-and-Loaded-Potato-Company-100501174636828/\" className=\"link\">/TwiceBakedandLoaded</a></span>\n            <a href=\"https://www.instagram.com/twicebakedandloaded/\" target=\"_blank\" className=\"icon\">instagram</a><a href=\"https://www.instagram.com/twicebakedandloaded/\" className=\"link\">@twicebakedandloaded</a>\n          </div>\n        </div>\n\n\n        <div className=\"black-slice\">\n          <div className=\"black-slice-content\">\n            <div className=\"slice-text\">\n              <h3 className=\"slice-h3\">\n                Twice Baked and loaded with <span className=\"paul\">Sustainablity</span>\n              </h3>\n              <p className=\"slice-p\">\n                We are trying to do our bit, we refuse to use single-use plastics. We don't see plastic bottles and use 100% recycled napkins and cardboard boxes. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiu ea commodo consequat.\n              </p>\n            </div>\n            <div>\n              <img className=\"slice-img\" src={require(\"./assets/images/sustainabilty.png\")} />\n            </div>\n          </div>\n        </div>\n\n\n      </div >\n\n    </div >\n  );\n}\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}